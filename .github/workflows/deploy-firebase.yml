name: Deploy Firebase

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node 20 (cache npm)
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: |
            package-lock.json
            frontend/package-lock.json
            functions/package-lock.json

      - name: Install Firebase CLI
        run: npm i -g firebase-tools

      - name: Fail fast if secrets missing
        env:
          GCP_SA_KEY_B64: ${{ secrets.GCP_SA_KEY_B64 }}
        run: |
          [ -n "$GCP_SA_KEY_B64" ] || { echo "::error::Missing secret GCP_SA_KEY_B64"; exit 1; }
          [ -n "$FIREBASE_PROJECT_ID" ] || { echo "::error::Missing secret FIREBASE_PROJECT_ID"; exit 1; }

      - name: Authenticate with Firebase (base64 key)
        env:
          GCP_SA_KEY_B64: ${{ secrets.GCP_SA_KEY_B64 }}
        run: |
          echo "$GCP_SA_KEY_B64" | base64 -d > "$RUNNER_TEMP/gcp_sa.json"
          export GOOGLE_APPLICATION_CREDENTIALS="$RUNNER_TEMP/gcp_sa.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$GOOGLE_APPLICATION_CREDENTIALS" >> "$GITHUB_ENV"
          firebase projects:list 1>/dev/null

      - name: Build frontend â†’ out
        run: |
          if [ -d frontend ]; then
            cd frontend
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npx next build || npm run build || true
            npx next export -o out || true
            cd ..
          else
            mkdir -p frontend/out
          fi

      - name: Build functions (if present)
        if: ${{ hashFiles('functions/**') != '' }}
        run: |
          cd functions
          if [ -f package-lock.json ]; then npm ci; else npm install; fi
          npm run build || npx tsc -p tsconfig.json || true
          cd ..

      - name: Deploy Functions
        if: ${{ hashFiles('functions/**') != '' }}
        run: firebase deploy --only functions --project "$FIREBASE_PROJECT_ID" --force --non-interactive

      - name: Deploy Hosting (skip if no out)
        if: ${{ hashFiles('frontend/out/**') != '' }}
        run: firebase deploy --only hosting --project "$FIREBASE_PROJECT_ID" --force --non-interactive
