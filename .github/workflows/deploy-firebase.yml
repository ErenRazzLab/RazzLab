name: Deploy Firebase
on:
  push:
    branches: [ main ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    env:
      FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install Firebase CLI
        run: npm i -g firebase-tools
      - name: Require secrets
        run: |
          [ -n "${{ secrets.GCP_SA_KEY_B64 }}" ] || { echo '::error::Missing GCP_SA_KEY_B64'; exit 1; }
          [ -n "${{ secrets.FIREBASE_PROJECT_ID }}" ] || { echo '::error::Missing FIREBASE_PROJECT_ID'; exit 1; }
      - name: Auth
        env:
          GCP_SA_KEY_B64: ${{ secrets.GCP_SA_KEY_B64 }}
        run: |
          echo "$GCP_SA_KEY_B64" | base64 -d > "$RUNNER_TEMP/sa.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS=$RUNNER_TEMP/sa.json" >> $GITHUB_ENV
          firebase projects:list 1>/dev/null
      - name: Build frontend â†’ out
        run: |
          if [ -d frontend ]; then 
            cd frontend
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run build || npx next build || true
            npx next export -o out || true
          fi
      - name: Build functions (if present)
        run: |
          if [ -d functions ]; then
            cd functions
            if [ -f package-lock.json ]; then npm ci; else npm install; fi
            npm run build || npx tsc -p tsconfig.json || true
          fi
      - name: Deploy Functions
        if: ${{ hashFiles('functions/**') != '' }}
        run: firebase deploy --only functions --project $FIREBASE_PROJECT_ID --force --non-interactive
      - name: Deploy Hosting
        run: firebase deploy --only hosting --project $FIREBASE_PROJECT_ID --force --non-interactive
