name: Deploy Firebase

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Authenticate with Firebase
        run: |
          echo "$GCP_SA_KEY" > $HOME/gcp_sa.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=$HOME/gcp_sa.json" >> $GITHUB_ENV
          firebase projects:list 1>/dev/null
        env:
          GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

      - name: Build frontend and prepare dist
        run: |
          if [ -d frontend ]; then
            cd frontend
            if [ -f package-lock.json ]; then
              npm ci
            else
              npm install
            fi
            npx next build
            npx next export -o out
            cd ..
            rm -rf dist && mkdir -p dist
            cp -r frontend/out/* dist/ || true
          else
            mkdir -p dist
          fi

      - name: Deploy Functions
        if: ${{ hashFiles('functions/**') != '' }}
        run: |
          cd functions
          if [ -f package-lock.json ]; then
            npm ci
          else
            npm install
          fi
          npm run build || npx tsc -p tsconfig.json || true
          cd ..
          firebase deploy --only functions --project "$FIREBASE_PROJECT_ID" --force --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Deploy Hosting
        run: |
          firebase deploy --only hosting --project "$FIREBASE_PROJECT_ID" --force --non-interactive
        env:
          GOOGLE_APPLICATION_CREDENTIALS: ${{ env.GOOGLE_APPLICATION_CREDENTIALS }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

